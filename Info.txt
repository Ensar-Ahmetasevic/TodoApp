** Next.js **

	npm i -- save pnpm
	
	pnpm create next-app   //ime app ce se dodijeliti u toku snimanja

	pnpm dev

	pnpm install // instaliras sve dependencies


** Kada ne mozemo instalirati neke od ovih library (najcesce zbog razlicith verzija) onda na kraju ovog koda dodajemo jos
	--legacy-peer-deps   ili   --force    (mada bolje ovo --legacy-peer-deps)

--------------------

** Axios ** 

	import axios from "axios";


	pnpm install axios --save
		

--------------------

** React Hook Form **
	import { useForm } from 'react-hook-form';
	const { register, handleSubmit, watch, formState: { errors } } = useForm();

	pnpm install react-hook-form --save

--------------------

** Express **

	const express = require("express");
	const app = express();
	app.use(express.json());

	pnpm install express --save

--------------------

** MongoDB ** 
(https://www.mongodb.com/home)
(https://www.npmjs.com/package/mongodb)

	pnpm install mongodb
	import { MongoClient } from "mongodb";


--------------------

** react-markdown **
(https://www.npmjs.com/package/react-markdown)

	pnpm install react-markdown

	import ReactMarkdown from "react-markdown"

--------------------
** gray-matter **
(https://www.npmjs.com/package/gray-matter)
(That's a package which allows us to read a "markdown" file and split it into "metadata" and the actual markdown content.)


	pnpm install gray-matter


--------------------
** NextAuth.js**
(https://next-auth.js.org/)

			pnpm install --save-exact next-auth@3 // verzija 3

	
--------------------

** Tailwind  **
(https://tailwindcss.com/docs/guides/nextjs)

	# Install Tailwind via pnpm	
		pnpm install -D tailwindcss@latest postcss@latest autoprefixer@latest

	# Create your configuration files
		pnpx tailwindcss init -p

	# Configure Tailwind to remove unused styles in production

		--> tailwind.config.js

 			/** @type {import('tailwindcss').Config} */
				module.exports = {
				content: [
					"./pages/**/*.{js,ts,jsx,tsx}",
					"./components/**/*.{js,ts,jsx,tsx}",
				],

				theme: {
					extend: {},
				},

				plugins: [],
				};

	# In globals

		@tailwind base;
		@tailwind components;
		@tailwind utilities;


--------------------
** Bulma **


--------------------

** Redux ** 

	pnpm install redux-form --legacy-peer-deps


	--> Redux Final Form

	pnpm install --save final-form react-final-form

-------------------- 
** Redux **

--> Redux-devtools-extension:

	github.com/zalmoxisus/redux-devtools-extension

	-> Pod "Installation" idemo

	1. For Chrome i kliknemo from Chrome Web Store, kako bismo instalirali dodatak u Chrome.

	-> Pod 1.2 Advanced store setup kopiramo odredene dodatke koje treba da importujemo u nas code a to su (applyMiddleware, compose)

 	  Code importujemo u glavni (root) index file !!!
  	 
	 import { createStore, applyMiddleware, compose } from 'redux';

	 --------------------


--------------------
** React Syntax Highlighter **
--> Syntax highlighting is a feature where text, especially source codes, is given unique design characteristics,
    such as a change in color or font, ...

	pnpm install react-syntax-highlighter

	import SyntaxHighlighter from 'react-syntax-highlighter';

		ili ovako:

		import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";

		pa onda se pozivamo samo na "Prism"

--------------------


** VS Code Comment **

	In Visual Studio: Ctrl+K+C will comment ->  Ctrl+K+U will uncomment

** Comment in JSX ** 

	{/* TEXT */}

--------------------

** Mongo DB **

	<-- Kako se konektovati na Mongo DB -->

    ako zelimo da se konektujemo na Mongo DB, prvo moramo pokrenuti "mongod" tako sto cemo u 
    u "PowerShell" ukucati "mongod", i on ce ga pokrenutu automatski. Zatim u novom PowerShell
    potrebno je ukucati "mongo" i onda bitrebalo da je se konektovo na Mongo DB...
    Zatim u "bash" provjerimo da se sigurno nalazimo u folderu sa kojim radimo i zatim kucamo
    "nodemon app.js" ili index.js ili kako na  se vec zove nas js file preko kojeg omogucujemo vezu

